// Code generated by protoc-gen-go. DO NOT EDIT.
// source: abuse-store.proto

package abuse_store

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The push response message containing
type PushReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushReply) Reset()         { *m = PushReply{} }
func (m *PushReply) String() string { return proto.CompactTextString(m) }
func (*PushReply) ProtoMessage()    {}
func (*PushReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_abuse_store_14e89cb845aa34db, []int{0}
}
func (m *PushReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushReply.Unmarshal(m, b)
}
func (m *PushReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushReply.Marshal(b, m, deterministic)
}
func (dst *PushReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushReply.Merge(dst, src)
}
func (m *PushReply) XXX_Size() int {
	return xxx_messageInfo_PushReply.Size(m)
}
func (m *PushReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushReply proto.InternalMessageInfo

// The push request message
type PushRequest struct {
	NoticeId             string   `protobuf:"bytes,1,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	Infohash             string   `protobuf:"bytes,2,opt,name=infohash,proto3" json:"infohash,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Work                 string   `protobuf:"bytes,4,opt,name=work,proto3" json:"work,omitempty"`
	StartedAt            int64    `protobuf:"varint,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Subject              string   `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRequest) Reset()         { *m = PushRequest{} }
func (m *PushRequest) String() string { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()    {}
func (*PushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abuse_store_14e89cb845aa34db, []int{1}
}
func (m *PushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRequest.Unmarshal(m, b)
}
func (m *PushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRequest.Marshal(b, m, deterministic)
}
func (dst *PushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRequest.Merge(dst, src)
}
func (m *PushRequest) XXX_Size() int {
	return xxx_messageInfo_PushRequest.Size(m)
}
func (m *PushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRequest proto.InternalMessageInfo

func (m *PushRequest) GetNoticeId() string {
	if m != nil {
		return m.NoticeId
	}
	return ""
}

func (m *PushRequest) GetInfohash() string {
	if m != nil {
		return m.Infohash
	}
	return ""
}

func (m *PushRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *PushRequest) GetWork() string {
	if m != nil {
		return m.Work
	}
	return ""
}

func (m *PushRequest) GetStartedAt() int64 {
	if m != nil {
		return m.StartedAt
	}
	return 0
}

func (m *PushRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PushRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PushRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

// The check request message containing the infoHash
type CheckRequest struct {
	Infohash             string   `protobuf:"bytes,1,opt,name=infohash,proto3" json:"infohash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRequest) Reset()         { *m = CheckRequest{} }
func (m *CheckRequest) String() string { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()    {}
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abuse_store_14e89cb845aa34db, []int{2}
}
func (m *CheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckRequest.Unmarshal(m, b)
}
func (m *CheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckRequest.Marshal(b, m, deterministic)
}
func (dst *CheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRequest.Merge(dst, src)
}
func (m *CheckRequest) XXX_Size() int {
	return xxx_messageInfo_CheckRequest.Size(m)
}
func (m *CheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRequest proto.InternalMessageInfo

func (m *CheckRequest) GetInfohash() string {
	if m != nil {
		return m.Infohash
	}
	return ""
}

// The check response message containing existance flag
type CheckReply struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckReply) Reset()         { *m = CheckReply{} }
func (m *CheckReply) String() string { return proto.CompactTextString(m) }
func (*CheckReply) ProtoMessage()    {}
func (*CheckReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_abuse_store_14e89cb845aa34db, []int{3}
}
func (m *CheckReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckReply.Unmarshal(m, b)
}
func (m *CheckReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckReply.Marshal(b, m, deterministic)
}
func (dst *CheckReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckReply.Merge(dst, src)
}
func (m *CheckReply) XXX_Size() int {
	return xxx_messageInfo_CheckReply.Size(m)
}
func (m *CheckReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckReply proto.InternalMessageInfo

func (m *CheckReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func init() {
	proto.RegisterType((*PushReply)(nil), "PushReply")
	proto.RegisterType((*PushRequest)(nil), "PushRequest")
	proto.RegisterType((*CheckRequest)(nil), "CheckRequest")
	proto.RegisterType((*CheckReply)(nil), "CheckReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AbuseStoreClient is the client API for AbuseStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AbuseStoreClient interface {
	// Pushes abuse to the store
	Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushReply, error)
	// Check abuse in the store for existence
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckReply, error)
}

type abuseStoreClient struct {
	cc *grpc.ClientConn
}

func NewAbuseStoreClient(cc *grpc.ClientConn) AbuseStoreClient {
	return &abuseStoreClient{cc}
}

func (c *abuseStoreClient) Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushReply, error) {
	out := new(PushReply)
	err := c.cc.Invoke(ctx, "/AbuseStore/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *abuseStoreClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckReply, error) {
	out := new(CheckReply)
	err := c.cc.Invoke(ctx, "/AbuseStore/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AbuseStoreServer is the server API for AbuseStore service.
type AbuseStoreServer interface {
	// Pushes abuse to the store
	Push(context.Context, *PushRequest) (*PushReply, error)
	// Check abuse in the store for existence
	Check(context.Context, *CheckRequest) (*CheckReply, error)
}

func RegisterAbuseStoreServer(s *grpc.Server, srv AbuseStoreServer) {
	s.RegisterService(&_AbuseStore_serviceDesc, srv)
}

func _AbuseStore_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AbuseStoreServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AbuseStore/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AbuseStoreServer).Push(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AbuseStore_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AbuseStoreServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AbuseStore/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AbuseStoreServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AbuseStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AbuseStore",
	HandlerType: (*AbuseStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _AbuseStore_Push_Handler,
		},
		{
			MethodName: "Check",
			Handler:    _AbuseStore_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "abuse-store.proto",
}

func init() { proto.RegisterFile("abuse-store.proto", fileDescriptor_abuse_store_14e89cb845aa34db) }

var fileDescriptor_abuse_store_14e89cb845aa34db = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xcf, 0x4e, 0xb3, 0x40,
	0x14, 0xc5, 0xcb, 0xd7, 0x96, 0xc2, 0xa5, 0xdf, 0xc2, 0x1b, 0x63, 0x26, 0x18, 0x13, 0x32, 0xd1,
	0xa4, 0x31, 0x91, 0x85, 0x3e, 0x41, 0xe3, 0xca, 0x9d, 0xc1, 0x85, 0xcb, 0x66, 0x80, 0xdb, 0x30,
	0x96, 0x32, 0xc8, 0x0c, 0xd1, 0x3e, 0xb1, 0xaf, 0x61, 0x18, 0x20, 0xc5, 0xdd, 0xfc, 0xce, 0xb9,
	0xf3, 0xe7, 0x9c, 0x81, 0x0b, 0x91, 0xb6, 0x9a, 0x1e, 0xb4, 0x51, 0x0d, 0xc5, 0x75, 0xa3, 0x8c,
	0xe2, 0x01, 0xf8, 0xaf, 0xad, 0x2e, 0x12, 0xaa, 0xcb, 0x13, 0xff, 0x71, 0x20, 0xe8, 0xe9, 0xb3,
	0x25, 0x6d, 0xf0, 0x1a, 0xfc, 0x4a, 0x19, 0x99, 0xd1, 0x4e, 0xe6, 0xcc, 0x89, 0x9c, 0x8d, 0x9f,
	0x78, 0xbd, 0xf0, 0x92, 0x63, 0x08, 0x9e, 0xac, 0xf6, 0xaa, 0x10, 0xba, 0x60, 0xff, 0x7a, 0x6f,
	0xe4, 0xce, 0xdb, 0xcb, 0x92, 0x2a, 0x71, 0x24, 0x36, 0xef, 0xbd, 0x91, 0x11, 0x61, 0xf1, 0xa5,
	0x9a, 0x03, 0x5b, 0x58, 0xdd, 0xae, 0xf1, 0x06, 0x40, 0x1b, 0xd1, 0x18, 0xca, 0x77, 0xc2, 0xb0,
	0x65, 0xe4, 0x6c, 0xe6, 0x89, 0x3f, 0x28, 0x5b, 0x83, 0x97, 0xb0, 0xa4, 0xa3, 0x90, 0x25, 0x73,
	0xed, 0x9e, 0x1e, 0x30, 0x82, 0x20, 0x27, 0x9d, 0x35, 0xb2, 0x36, 0x52, 0x55, 0x6c, 0x65, 0xbd,
	0xa9, 0x84, 0x0c, 0x56, 0xba, 0x4d, 0x3f, 0x28, 0x33, 0xcc, 0xb3, 0xee, 0x88, 0xfc, 0x1e, 0xd6,
	0xcf, 0x05, 0x65, 0x87, 0x31, 0xe9, 0x34, 0x8c, 0xf3, 0x37, 0x0c, 0xbf, 0x05, 0x18, 0x66, 0xeb,
	0xf2, 0x84, 0x57, 0xe0, 0xd2, 0xb7, 0xd4, 0x46, 0xdb, 0x39, 0x2f, 0x19, 0xe8, 0xf1, 0x1d, 0x60,
	0xdb, 0xb5, 0xfb, 0xd6, 0x95, 0x8b, 0x1c, 0x16, 0x5d, 0x91, 0xb8, 0x8e, 0x27, 0x7d, 0x86, 0x10,
	0x9f, 0xbb, 0x9e, 0xe1, 0x1d, 0x2c, 0xed, 0xb9, 0xf8, 0x3f, 0x9e, 0xbe, 0x25, 0x0c, 0xe2, 0xf3,
	0x75, 0x7c, 0x96, 0xba, 0xf6, 0xa3, 0x9e, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x37, 0xc2, 0x1e,
	0xa5, 0xbd, 0x01, 0x00, 0x00,
}
